{
    "NumberOfJoints" : 6,
    "LoopTimeMs": 2,
    "KinematicChain" :
    {
        "format": "ReadingMathExpressions",
        "parameters": [
            {
                "D" : 0.2755,
                "Theta" : 0.0,
                "A" : 0.0,
                "Alpha" : 1.5708
            },
            {
                "D" : 0.0,
                "Theta" : 1.5708,
                "A" : 0.4100,
                "Alpha" : 3.1416
            },
            {
                "D" : -0.0098,
                "Theta" : -1.5708,
                "A" : 0.0,
                "Alpha" : 1.5708
            },
            {
                "D" : -0.3111,
                "Theta" : 0.0,
                "A" : 0.0,
                "Alpha" : 1.5708
            },
            {
                "D" : 0.0,
                "Theta" : 0,
                "A" : 0.0,
                "Alpha" : 1.5708
            },
            {
                "D" : 0.2495,
                "Theta" : 3.1416,
                "A" : 0.0,
                "Alpha" : 0.0
            }]
    },
    "Joints" : [
        {
            "Maximum": 6.28,
            "Minimum": -6.28,
            "MaximumVelocity": 2.09,
            "MaximumAcceleration": 0,
            "MaximumTorque": 0,
            "Direction": 1,
            "Offset" : 0,
            "Kp": 0,
            "Ki": 0,
            "Kd": 0
        },
        {
            "Maximum": 6.28,
            "Minimum": -6.28,
            "MaximumVelocity": 2.09,
            "MaximumAcceleration": 0,
            "MaximumTorque": 0,
            "Direction": 1,
            "Offset" : 0,
            "Kp": 0,
            "Ki": 0,
            "Kd": 0
        },
        {
            "Maximum": 6.28,
            "Minimum": -6.28,
            "MaximumVelocity": 3.14,
            "MaximumAcceleration": 0,
            "MaximumTorque": 0,
            "Direction": 1,
            "Offset" : 0,
            "Kp": 0,
            "Ki": 0,
            "Kd": 0
        },
        {
            "Maximum": 6.28,
            "Minimum": -6.28,
            "MaximumVelocity": 3.14,
            "MaximumAcceleration": 0,
            "MaximumTorque": 0,
            "Direction": 1,
            "Offset" : 0,
            "Kp": 0,
            "Ki": 0,
            "Kd": 0
        },
        {
            "Maximum": 6.28,
            "Minimum": -6.28,
            "MaximumVelocity": 3.14,
            "MaximumAcceleration": 0,
            "MaximumTorque": 0,
            "Direction": 1,
            "Offset" : 0,
            "Kp": 0,
            "Ki": 0,
            "Kd": 0
        },
        {
            "Maximum": 6.28,
            "Minimum": -6.28,
            "MaximumVelocity": 3.14,
            "MaximumAcceleration": 0,
            "MaximumTorque": 0,
            "Direction": 1,
            "Offset" : 0,
            "Kp": 0,
            "Ki": 0,
            "Kd": 0
        }
    ],
    "Task": {
        "MaximumVelocity": [0, 0, 0, 0, 0, 0],
        "MaximumAcceleration": [0, 0, 0, 0, 0, 0],
        "Kp": [0, 0, 0, 0, 0, 0],
        "Ki": [0, 0, 0, 0, 0, 0],
        "Kd": [0, 0, 0, 0, 0, 0]
    },
    "Lengths" :
    {
        "lx" : [0.0, 0.0, 0.6127, 0.57155, 0.0, 0.0],
        "ly" : [0.0, 0.0, 0.0, 0.0, 0.0, 0.11655],
        "lz" : [0.0, 0.1807, 0.0, 0.0, 0.17415, 0.11985]
    },
    "Jacobian" :
    {
        "Row0" :
        {
            "Col0" : "(((cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x) * cos(q3) + (-sin(q4) * sin(q5) * l6y - l6z * cos(q4)) * sin(q3) + l3x) * cos(q2) - ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) - sin(q3) * (-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x)) * sin(q2)) * sin(q1) + cos(q1) * (cos(q5) * l6y + l5z)",
            "Col1" : "(((cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x) * cos(q3) + (-sin(q4) * sin(q5) * l6y - l6z * cos(q4)) * sin(q3) + l3x) * sin(q2) + ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) + sin(q3) * (cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x)) * cos(q2)) * cos(q1)",
            "Col2" : "(((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) + sin(q3) * (cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x)) * cos(q2) + ((cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x) * cos(q3) - (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3)) * sin(q2)) * cos(q1)",
            "Col3" : "cos(q1) * (((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) + (cos(q4) * sin(q5) * l6y - l6z * sin(q4)) * sin(q3)) * cos(q2) + ((cos(q4) * sin(q5) * l6y - l6z * sin(q4)) * cos(q3) - (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3)) * sin(q2))",
            "Col4" : "l6y * (((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * cos(q5) * cos(q1) - sin(q1) * sin(q5))",
            "Col5" : "0"
        },
        "Row1" :
        {
            "Col0" : "(((-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x) * cos(q3) + (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3) - l3x) * cos(q2) + ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) - sin(q3) * (-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x)) * sin(q2)) * cos(q1) + sin(q1) * (cos(q5) * l6y + l5z)",
            "Col1" : "sin(q1) * (((cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x) * cos(q3) + (-sin(q4) * sin(q5) * l6y - l6z * cos(q4)) * sin(q3) + l3x) * sin(q2) + ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) + sin(q3) * (cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x)) * cos(q2))",
            "Col2" : "(((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) + sin(q3) * (cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x)) * cos(q2) + ((cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x) * cos(q3) - (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3)) * sin(q2)) * sin(q1)",
            "Col3" : "-(((-sin(q4) * sin(q5) * l6y - l6z * cos(q4)) * cos(q3) - (cos(q4) * sin(q5) * l6y - l6z * sin(q4)) * sin(q3)) * cos(q2) + ((-cos(q4) * sin(q5) * l6y + l6z * sin(q4)) * cos(q3) + (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3)) * sin(q2)) * sin(q1)",
            "Col4" : "(((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * sin(q1) * cos(q5) + cos(q1) * sin(q5)) * l6y",
            "Col5" : "0"
        },
        "Row2" :
        {
            "Col0" : "0",
            "Col1" : "((-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x) * cos(q3) + (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3) - l3x) * cos(q2) + sin(q2) * ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) + sin(q3) * (cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x))",
            "Col2" : "((-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x) * cos(q3) + (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3)) * cos(q2) + sin(q2) * ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) + sin(q3) * (cos(q4) * sin(q5) * l6y - l6z * sin(q4) + l4x))",
            "Col3" : "((-cos(q4) * sin(q5) * l6y + l6z * sin(q4)) * cos(q3) + (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3)) * cos(q2) - sin(q2) * ((-sin(q4) * sin(q5) * l6y - l6z * cos(q4)) * cos(q3) + sin(q3) * (-cos(q4) * sin(q5) * l6y + l6z * sin(q4)))",
            "Col4" : "l6y * (sin(q4) * (sin(q2) * sin(q3) - cos(q2) * cos(q3)) - (sin(q2) * cos(q3) + cos(q2) * sin(q3)) * cos(q4)) * cos(q5)",
            "Col5" : "0"
        },
        "Row3" :
        {
            "Col0" : "0",
            "Col1" : "sin(q1)",
            "Col2" : "sin(q1)",
            "Col3" : "sin(q1)",
            "Col4" : "-cos(q1) * (sin(q4) * (sin(q2) * sin(q3) - cos(q2) * cos(q3)) - (sin(q2) * cos(q3) + cos(q2) * sin(q3)) * cos(q4))",
            "Col5" : "sin(q5) * ((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * cos(q1) + sin(q1) * cos(q5)"
        },
        "Row4" :
        {
            "Col0" : "0",
            "Col1" : "-cos(q1)",
            "Col2" : "-cos(q1)",
            "Col3" : "-cos(q1)",
            "Col4" : "-sin(q1) * (sin(q4) * (sin(q2) * sin(q3) - cos(q2) * cos(q3)) - (sin(q2) * cos(q3) + cos(q2) * sin(q3)) * cos(q4))",
            "Col5" : "sin(q5) * ((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * sin(q1) - cos(q1) * cos(q5)"
        },
        "Row5" :
        {
            "Col0" : "1",
            "Col1" : "0",
            "Col2" : "0",
            "Col3" : "0",
            "Col4" : "(sin(q2) * cos(q3) + cos(q2) * sin(q3)) * sin(q4) - (-sin(q2) * sin(q3) + cos(q2) * cos(q3)) * cos(q4)",
            "Col5" : "-((sin(q2) * cos(q3) + cos(q2) * sin(q3)) * cos(q4) + (-sin(q2) * sin(q3) + cos(q2) * cos(q3)) * sin(q4)) * sin(q5)"
        }
    }
}
