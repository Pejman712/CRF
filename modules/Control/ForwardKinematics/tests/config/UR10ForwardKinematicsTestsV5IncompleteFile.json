{
    "RIE" : {
        "Row0" : {
            "Col0" : "(-((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * cos(q5) * cos(q6) - ((sin(q3) * cos(q4) + sin(q4) * cos(q3)) * cos(q2) + sin(q2) * (cos(q3) * cos(q4) - sin(q3) * sin(q4))) * sin(q6)) * cos(q1) + sin(q5) * cos(q6) * sin(q1)",
            "Col1" : "(((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * cos(q5) * sin(q6) - cos(q6) * ((sin(q3) * cos(q4) + sin(q4) * cos(q3)) * cos(q2) + sin(q2) * (cos(q3) * cos(q4) - sin(q3) * sin(q4)))) * cos(q1) - sin(q5) * sin(q6) * sin(q1)",
            "Col2" : "sin(q5) * ((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * cos(q1) + sin(q1) * cos(q5)"
        },
        "Row1" : {
            "Col0" : "(-((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * cos(q5) * cos(q6) - ((sin(q3) * cos(q4) + sin(q4) * cos(q3)) * cos(q2) + sin(q2) * (cos(q3) * cos(q4) - sin(q3) * sin(q4))) * sin(q6)) * sin(q1) - sin(q5) * cos(q6) * cos(q1)",
            "Col1" : "(((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * cos(q5) * sin(q6) - cos(q6) * ((sin(q3) * cos(q4) + sin(q4) * cos(q3)) * cos(q2) + sin(q2) * (cos(q3) * cos(q4) - sin(q3) * sin(q4)))) * sin(q1) + sin(q5) * sin(q6) * cos(q1)",
            "Col2" : "sin(q5) * ((sin(q3) * sin(q4) - cos(q3) * cos(q4)) * cos(q2) + sin(q2) * (sin(q3) * cos(q4) + sin(q4) * cos(q3))) * sin(q1) - cos(q1) * cos(q5)"
        },
        "Row2" : {
            "Col0" : "((cos(q6) * sin(q4) * cos(q5) + sin(q6) * cos(q4)) * cos(q3) + sin(q3) * (cos(q6) * cos(q5) * cos(q4) - sin(q6) * sin(q4))) * cos(q2) - ((-cos(q6) * cos(q5) * cos(q4) + sin(q6) * sin(q4)) * cos(q3) + sin(q3) * (cos(q6) * sin(q4) * cos(q5) + sin(q6) * cos(q4))) * sin(q2)",
            "Col1" : "((-sin(q4) * sin(q6) * cos(q5) + cos(q6) * cos(q4)) * cos(q3) - sin(q3) * (sin(q6) * cos(q5) * cos(q4) + cos(q6) * sin(q4))) * cos(q2) - sin(q2) * ((sin(q6) * cos(q5) * cos(q4) + cos(q6) * sin(q4)) * cos(q3) + sin(q3) * (-sin(q4) * sin(q6) * cos(q5) + cos(q6) * cos(q4)))",
            "Col2" : "-((sin(q2) * cos(q3) + cos(q2) * sin(q3)) * cos(q4) + (-sin(q2) * sin(q3) + cos(q2) * cos(q3)) * sin(q4)) * sin(q5)"
        }
    },
    "IvIE" : {
        "0" : "((((-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * cos(q4) + sin(q4) * sin(q5) * l6y * (qd2 + qd3 + qd4)) * cos(q3) - sin(q3) * (-sin(q5) * l6y * (qd2 + qd3 + qd4) * cos(q4) + (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * sin(q4) - l4x * (qd2 + qd3))) * cos(q2) + ((sin(q5) * l6y * (qd2 + qd3 + qd4) * cos(q4) + (qd5 * cos(q5) * l6y - l6z * (qd2 + qd3 + qd4)) * sin(q4) + l4x * (qd2 + qd3)) * cos(q3) + ((qd5 * cos(q5) * l6y - l6z * (qd2 + qd3 + qd4)) * cos(q4) - sin(q4) * sin(q5) * l6y * (qd2 + qd3 + qd4)) * sin(q3) + qd2 * l3x) * sin(q2) + qd1 * (cos(q5) * l6y + l5z)) * cos(q1) - sin(q1) * (((-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x) * cos(q3) + (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3) - l3x) * qd1 * cos(q2) + ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) - sin(q3) * (-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x)) * qd1 * sin(q2) + qd5 * sin(q5) * l6y)",
        "1" : "((((-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * cos(q4) + sin(q4) * sin(q5) * l6y * (qd2 + qd3 + qd4)) * cos(q3) - sin(q3) * (-sin(q5) * l6y * (qd2 + qd3 + qd4) * cos(q4) + (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * sin(q4) - l4x * (qd2 + qd3))) * cos(q2) + ((sin(q5) * l6y * (qd2 + qd3 + qd4) * cos(q4) + (qd5 * cos(q5) * l6y - l6z * (qd2 + qd3 + qd4)) * sin(q4) + l4x * (qd2 + qd3)) * cos(q3) + ((qd5 * cos(q5) * l6y - l6z * (qd2 + qd3 + qd4)) * cos(q4) - sin(q4) * sin(q5) * l6y * (qd2 + qd3 + qd4)) * sin(q3) + qd2 * l3x) * sin(q2) + qd1 * (cos(q5) * l6y + l5z)) * sin(q1) + cos(q1) * (((-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x) * cos(q3) + (sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * sin(q3) - l3x) * qd1 * cos(q2) + ((sin(q4) * sin(q5) * l6y + l6z * cos(q4)) * cos(q3) - sin(q3) * (-cos(q4) * sin(q5) * l6y + l6z * sin(q4) - l4x)) * qd1 * sin(q2) + qd5 * sin(q5) * l6y)",
        "2" : "((-sin(q5) * l6y * (qd2 + qd3 + qd4) * cos(q4) + (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * sin(q4) - l4x * (qd2 + qd3)) * cos(q3) + ((-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * cos(q4) + sin(q4) * sin(q5) * l6y * (qd2 + qd3 + qd4)) * sin(q3) - qd2 * l3x) * cos(q2) + sin(q2) * (((-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * cos(q4) + sin(q4) * sin(q5) * l6y * (qd2 + qd3 + qd4)) * cos(q3) + (sin(q5) * l6y * (qd2 + qd3 + qd4) * cos(q4) + (qd5 * cos(q5) * l6y - l6z * (qd2 + qd3 + qd4)) * sin(q4) + l4x * (qd2 + qd3)) * sin(q3))"
    },
    "IaIE" : {
        "0" : "(((((qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) - qdd5 * cos(q5) * l6y + l6z * (qdd2 + qdd3 + qdd4)) * cos(q4) + (l6y * (qdd2 + qdd3 + qdd4) * sin(q5) + 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) - l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * sin(q4) + ((qd1 ^ 2 + (qd2 + qd3) ^ 2) * l4x)) * cos(q3) + ((l6y * (qdd2 + qdd3 + qdd4) * sin(q5) + 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) - l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * cos(q4) + (-(qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) + qdd5 * cos(q5) * l6y - l6z * (qdd2 + qdd3 + qdd4)) * sin(q4) + l4x * (qdd2 + qdd3)) * sin(q3) + (l3x * (qd1 ^ 2 + qd2 ^ 2))) * cos(q2) + (((l6y * (qdd2 + qdd3 + qdd4) * sin(q5) + 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) - l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * cos(q4) + (-(qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) + qdd5 * cos(q5) * l6y - l6z * (qdd2 + qdd3 + qdd4)) * sin(q4) + l4x * (qdd2 + qdd3)) * cos(q3) + ((-(qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) + qdd5 * cos(q5) * l6y - l6z * (qdd2 + qdd3 + qdd4)) * cos(q4) + (-l6y * (qdd2 + qdd3 + qdd4) * sin(q5) - 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) + l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * sin(q4) - ((qd1 ^ 2 + (qd2 + qd3) ^ 2) * l4x)) * sin(q3) + qdd2 * l3x) * sin(q2) - 2 * qd1 * qd5 * sin(q5) * l6y + qdd1 * (cos(q5) * l6y + l5z)) * cos(q1) - 2 * sin(q1) * ((((-qdd1 * sin(q5) * l6y / 2 + (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * cos(q4) + (qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) + l6z * qdd1 / 2) * sin(q4) - qdd1 * l4x / 2) * cos(q3) + ((qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) + l6z * qdd1 / 2) * cos(q4) + (qdd1 * sin(q5) * l6y / 2 - (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * sin(q4) + (qd1 * l4x * (qd2 + qd3))) * sin(q3) - qdd1 * l3x / 2) * cos(q2) + (((qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) + l6z * qdd1 / 2) * cos(q4) + (qdd1 * sin(q5) * l6y / 2 - (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * sin(q4) + (qd1 * l4x * (qd2 + qd3))) * cos(q3) + ((qdd1 * sin(q5) * l6y / 2 - (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * cos(q4) + (-qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) - l6z * qdd1 / 2) * sin(q4) + qdd1 * l4x / 2) * sin(q3) + (qd1 * qd2 * l3x)) * sin(q2) + qdd5 * sin(q5) * l6y / 2 + l6y * (qd1 ^ 2 + qd5 ^ 2) * cos(q5) / 2 + (qd1 ^ 2) * l5z / 2)",
        "1" : "(((((qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) - qdd5 * cos(q5) * l6y + l6z * (qdd2 + qdd3 + qdd4)) * cos(q4) + (l6y * (qdd2 + qdd3 + qdd4) * sin(q5) + 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) - l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * sin(q4) + ((qd1 ^ 2 + (qd2 + qd3) ^ 2) * l4x)) * cos(q3) + ((l6y * (qdd2 + qdd3 + qdd4) * sin(q5) + 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) - l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * cos(q4) + (-(qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) + qdd5 * cos(q5) * l6y - l6z * (qdd2 + qdd3 + qdd4)) * sin(q4) + l4x * (qdd2 + qdd3)) * sin(q3) + (l3x * (qd1 ^ 2 + qd2 ^ 2))) * cos(q2) + (((l6y * (qdd2 + qdd3 + qdd4) * sin(q5) + 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) - l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * cos(q4) + (-(qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) + qdd5 * cos(q5) * l6y - l6z * (qdd2 + qdd3 + qdd4)) * sin(q4) + l4x * (qdd2 + qdd3)) * cos(q3) + ((-(qd1 ^ 2 + qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) + qdd5 * cos(q5) * l6y - l6z * (qdd2 + qdd3 + qdd4)) * cos(q4) + (-l6y * (qdd2 + qdd3 + qdd4) * sin(q5) - 2 * qd5 * l6y * (qd2 + qd3 + qd4) * cos(q5) + l6z * (qd1 ^ 2 + (qd2 + qd3 + qd4) ^ 2)) * sin(q4) - ((qd1 ^ 2 + (qd2 + qd3) ^ 2) * l4x)) * sin(q3) + qdd2 * l3x) * sin(q2) - 2 * qd1 * qd5 * sin(q5) * l6y + qdd1 * (cos(q5) * l6y + l5z)) * sin(q1) + 2 * cos(q1) * ((((-qdd1 * sin(q5) * l6y / 2 + (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * cos(q4) + (qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) + l6z * qdd1 / 2) * sin(q4) - qdd1 * l4x / 2) * cos(q3) + ((qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) + l6z * qdd1 / 2) * cos(q4) + (qdd1 * sin(q5) * l6y / 2 - (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * sin(q4) + (qd1 * l4x * (qd2 + qd3))) * sin(q3) - qdd1 * l3x / 2) * cos(q2) + (((qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) + l6z * qdd1 / 2) * cos(q4) + (qdd1 * sin(q5) * l6y / 2 - (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * sin(q4) + (qd1 * l4x * (qd2 + qd3))) * cos(q3) + ((qdd1 * sin(q5) * l6y / 2 - (-qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4)) * qd1) * cos(q4) + (-qd1 * l6y * (qd2 + qd3 + qd4) * sin(q5) - l6z * qdd1 / 2) * sin(q4) + qdd1 * l4x / 2) * sin(q3) + (qd1 * qd2 * l3x)) * sin(q2) + qdd5 * sin(q5) * l6y / 2 + l6y * (qd1 ^ 2 + qd5 ^ 2) * cos(q5) / 2 + (qd1 ^ 2) * l5z / 2)",
        "2" : "(((-l6y * (qdd2 + qdd3 + qdd4) * sin(q5) + (qd2 + qd3 + qd4) * (-2 * qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4))) * cos(q4) + ((qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) - qdd5 * cos(q5) * l6y + l6z * (qdd2 + qdd3 + qdd4)) * sin(q4) - l4x * (qdd2 + qdd3)) * cos(q3) + (((qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) - qdd5 * cos(q5) * l6y + l6z * (qdd2 + qdd3 + qdd4)) * cos(q4) + (l6y * (qdd2 + qdd3 + qdd4) * sin(q5) - (qd2 + qd3 + qd4) * (-2 * qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4))) * sin(q4) + (l4x * (qd2 + qd3) ^ 2)) * sin(q3) - qdd2 * l3x) * cos(q2) + sin(q2) * ((((qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) - qdd5 * cos(q5) * l6y + l6z * (qdd2 + qdd3 + qdd4)) * cos(q4) + (l6y * (qdd2 + qdd3 + qdd4) * sin(q5) - (qd2 + qd3 + qd4) * (-2 * qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4))) * sin(q4) + (l4x * (qd2 + qd3) ^ 2)) * cos(q3) + ((l6y * (qdd2 + qdd3 + qdd4) * sin(q5) - (qd2 + qd3 + qd4) * (-2 * qd5 * cos(q5) * l6y + l6z * (qd2 + qd3 + qd4))) * cos(q4) + (-(qd2 ^ 2 + (2 * qd3 + 2 * qd4) * qd2 + qd3 ^ 2 + 2 * qd3 * qd4 + qd4 ^ 2 + qd5 ^ 2) * l6y * sin(q5) + qdd5 * cos(q5) * l6y - l6z * (qdd2 + qdd3 + qdd4)) * sin(q4) + l4x * (qdd2 + qdd3)) * sin(q3) + (l3x * qd2 ^ 2))"
    }
}
